#version 330 core
out vec4 FragColor;

in vec2 TexCoords;
in vec3 Pos;
in vec3 Normal;

uniform sampler2D texture_diffuse1;
uniform vec3 cameraPos;
uniform samplerCube skybox;

uniform sampler2D normalFrontTexture;
uniform sampler2D normalBackTexture;

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

void main()
{
    vec2 uv = (gl_FragCoord.xy / vec2(2*800.0, 2*600.0));
    float ratio = 1.00/1.309;
    vec4 frontData = normalize(texture(normalFrontTexture, uv));
    vec4 backData = normalize(texture(normalBackTexture, uv));
    
    //Implementation of pseudo-code
    vec3 N1 = normalize(Normal);
    vec3 V = normalize(Pos - cameraPos);
    vec3 T1 = normalize(refract(V, N1, ratio));
    
    float d = abs(backData.a - frontData.a);
    vec4 P2 = vec4(Pos + d*T1 , 1.0); //P2 and Pos might be in world space.. Här ger vi P2 ett w värde 1.0
    P2 = vec4(projection*view*(P2)); //After proj the values are between -w and w.
    P2 /= P2.w; //Now values are between -1,1. Texture coordinates are between 0 and 1
    vec2 newUV = P2.xy * 0.5 + vec2(0.5); //Now they are between 0 and 1

    vec3 N2 = Normal;
    if(texture(normalBackTexture, newUV).a == 0.0 ||texture(normalBackTexture, newUV).a == 1.0) { //Set this to true for cool effect
        
        float ratio2 = 1.309/1.00;
        N2 = T1-dot(V,T1)*V; //V should be lookout vector
        vec3 T2 = refract(T1, N2, ratio);
        
        //sample from the cubemap in T2's direction
        FragColor = vec4(texture(skybox, T2).rgb, 1.0);
        //FragColor = vec4(1.0,0.0,0.0,1.0);
    } else {
        N2 = (texture(normalBackTexture, newUV).rgb);
        float ratio2 = 1.309/1.00;
        vec3 T2 = refract(T1, N2, ratio);
        
        //sample from the cubemap in T2's direction
        FragColor = vec4(texture(skybox, T2).rgb, 1.0);
    }

/*
    float d = abs(backData.a - frontData.a); //This always ends up being 0 because depth is between [0,1] and mostly 1.. Try and linearize.
    vec3 P2 = Pos + d*T1; //P2 is in world space since Pos is in world space FELET LIGGER I ATT DEPTH ALLTID ÄR 0
    //P2 = vec3(view * vec4(P2, 1.0));
    //P2 = vec3(projection*view* model*vec4(P2, 1.0));
    //P2 = P2.xyz/gl_FragCoord.w;
    
    //P2 = vec3(projection*view*model*gl_FragCoord);
    vec2 newUV = (P2.xy / vec2(2*800.0, 2*600.0)); //Här felet ligger... *0.5+vec2(0.5);
    vec3 N2 = texture(normalBackTexture, newUV).rgb;
    float ratio2 = 1.309;
    vec3 T2 = refract(T1, normalize(N2), ratio); //normalizing N2 does change it..

    //sample from the cubemap in T2's direction
    //FragColor = vec4(texture(skybox, T2).rgb, 1.0);
*/

    //FragColor = vec4(vec3(gl_FragCoord.z), 1.0f);
    //float ratio = 1.00/1.309;
    //vec3 I = normalize(Pos - cameraPos);
    //vec3 R = refract(I, normalize(Normal), ratio);
    //FragColor = vec4(texture(skybox, R).rgb, 1.0); //Refraction
    //vec2 uv = (gl_FragCoord.xy / vec2(2*800.0, 2*600.0));
    //FragColor = vec4(texture(normalFrontTexture, uv));
    //float backDepth = texture(normalBackTexture, uv).a;
    //float frontDepth = texture(normalFrontTexture, uv).a;
    //FragColor = vec4(texture(normalBackTexture, uv));
    //FragColor = vec4(vec3(frontDepth), 1.0);
    //FragColor = vec4(Normal, 1.0);
}
